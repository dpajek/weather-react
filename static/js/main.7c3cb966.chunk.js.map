{"version":3,"sources":["currentweather.js","forecastcard.js","sevendayforecast.js","hourlyforecast.js","selecteddayforecast.js","App.js","serviceWorker.js","index.js"],"names":["CurrentWeather","current","this","props","temp","Math","round","feelsLike","feels_like","icon","weather","description","weatherIcon","className","alt","src","React","Component","ForecastCard","day","card_class","selected","high","max","low","min","onClick","SevenDayForecast","daily","selectedIndex","forecastCards","map","i","key","HourlyForecast","hour","pop","hourlyForecastRows","hourly","HourlyForecastRow","SelectedDayForecast","humidity","hourlyForecast","App","state","axios","get","then","firstResponse","console","log","data","lat","coord","lon","query","response","setState","catch","error","selectedDayForecast","slice","handleForecastCardClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7c3cb966.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./currentweather.css\";\r\n\r\nexport default class CurrentWeather extends React.Component {\r\n  render() {\r\n    const { current } = this.props;\r\n\r\n    const temp = current !== null ? Math.round(current.temp) : \"--\";\r\n    const feelsLike = current !== null ? Math.round(current.feels_like) : \"--\";\r\n    const icon = current !== null ? current.weather[0].icon : null;\r\n    const description =\r\n      current !== null ? current.weather[0].description : null;\r\n\r\n    const weatherIcon =\r\n      icon !== null ? (\r\n        <img\r\n          className=\"weather-icon\"\r\n          alt={description}\r\n          src={`http://openweathermap.org/img/wn/${icon}@4x.png`}\r\n        />\r\n      ) : null;\r\n\r\n    return (\r\n      <div className=\"current-weather\">\r\n        {weatherIcon}\r\n        <div className=\"temp\">\r\n          <span>{temp}&deg;C</span>\r\n          <div className=\"feels-like\">Feels like {feelsLike}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./forecastcard.css\";\r\n\r\nexport default class ForecastCard extends React.Component {\r\n  render() {\r\n    const { day, selected } = this.props;\r\n    const card_class = selected\r\n      ? \"forecast-card forecast-card-selected\"\r\n      : \"forecast-card\";\r\n\r\n    //console.log(day);\r\n\r\n    const high = Math.round(day.temp.max);\r\n    const low = Math.round(day.temp.min);\r\n    const icon = day.weather[0].icon;\r\n    const description = day.weather[0].description;\r\n\r\n    const weatherIcon =\r\n      icon !== null ? (\r\n        <img\r\n          className=\"weather-icon\"\r\n          alt={description}\r\n          src={`http://openweathermap.org/img/wn/${icon}@4x.png`}\r\n        />\r\n      ) : null;\r\n\r\n    return (\r\n      <div className={card_class} onClick={this.props.onClick}>\r\n        <div className=\"week-day\">Tue</div>\r\n        {weatherIcon}\r\n        <div className=\"high-low\">\r\n          H: {high} | L: {low}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport ForecastCard from \"./forecastcard\";\r\nimport \"./sevendayforecast.css\";\r\n\r\nexport default class SevenDayForecast extends React.Component {\r\n  render() {\r\n    const { daily, selectedIndex } = this.props;\r\n\r\n    if (daily === null) return null;\r\n\r\n    const forecastCards = daily.map((day, i) => {\r\n      return i < 7 ? (\r\n        <ForecastCard\r\n          key={i}\r\n          day={day}\r\n          selected={i === selectedIndex}\r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      ) : null;\r\n    });\r\n\r\n    return <div className=\"seven-day-forecast\">{forecastCards}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./hourlyforecast.css\";\r\n\r\nexport default class HourlyForecast extends React.Component {\r\n  HourlyForecastRow(hour,i) {\r\n      const temp = Math.round(hour.temp);\r\n      const icon = hour.weather[0].icon;\r\n      const description = hour.weather[0].description;\r\n      const feelsLike = Math.round(hour.feels_like);\r\n      const pop = Math.round(hour.pop * 100);\r\n\r\n      const weatherIcon =\r\n      icon !== null ? (\r\n        <img\r\n          className=\"weather-icon\"\r\n          alt={description}\r\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        />\r\n      ) : null;\r\n\r\n    return (\r\n      <li className=\"row\" key = {i}>\r\n        5 PM\r\n        {weatherIcon}\r\n        <div className=\"temp\">{temp}&deg;</div>\r\n        <div className=\"feels-like\">Feels like {feelsLike}</div>\r\n        <div className=\"POP\">POP: {pop}%</div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {hourly} = this.props;\r\n\r\n    const hourlyForecastRows = hourly.map((hour,i)=>{\r\n        return this.HourlyForecastRow(hour,i)\r\n    });\r\n    \r\n\r\n    return (\r\n      <ul className=\"hourly-forecast\">\r\n        {hourlyForecastRows}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./selecteddayforecast.css\";\r\n\r\nimport HourlyForecast from \"./hourlyforecast\";\r\n\r\nexport default class SelectedDayForecast extends React.Component {\r\n  render() {\r\n    const { day, hourly } = this.props;\r\n    const temp = Math.round(day.temp.day);\r\n    const high = Math.round(day.temp.max);\r\n    const low = Math.round(day.temp.min);\r\n    const feelsLike = Math.round(day.feels_like.day);\r\n    const description = day.weather[0].description;\r\n    const humidity = day.humidity;\r\n    const pop = day.pop * 100;\r\n\r\n    const hourlyForecast =\r\n      hourly !== null ? (\r\n        <div className=\"hourly\">\r\n          Hourly Forecast\r\n          <HourlyForecast hourly={hourly} />\r\n        </div>\r\n      ) : null;\r\n\r\n    return (\r\n      <div className=\"selected-day-forecast\">\r\n        <div className=\"details\">\r\n          Saturday, September 26\r\n          <div className=\"main-temp\">{temp}&deg;</div>\r\n          <div className=\"left-details\">\r\n            <div className=\"detail\">Feels like {feelsLike}</div>\r\n            <div className=\"detail\">High: {high}</div>\r\n            <div className=\"detail\">Low: {low}</div>\r\n          </div>\r\n          <div className=\"right-details\">\r\n            <div className=\"detail\">{description}</div>\r\n            <div className=\"detail\">Humidity: {humidity}%</div>\r\n            <div className=\"detail\">POP: {pop}%</div>\r\n          </div>\r\n        </div>\r\n        {hourlyForecast}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport axios from \"axios\";\n\nimport CurrentWeather from \"./currentweather\";\nimport SevenDayForecast from \"./sevendayforecast\";\nimport SelectedDayForecast from \"./selecteddayforecast\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hourly: null,\n      daily: null,\n      current: null,\n      selectedIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://api.openweathermap.org/data/2.5/weather?q=oakville,ca&units=metric&appid=da4ae7b36217a0da6389f022926ce444\"\n      )\n      .then((firstResponse) => {\n        console.log(firstResponse.data);\n        const lat = firstResponse.data.coord.lat;\n        const lon = firstResponse.data.coord.lon;\n\n        const query = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=da4ae7b36217a0da6389f022926ce444&units=metric`;\n\n        axios\n          .get(query)\n          .then((response) => {\n            console.log(response.data);\n            this.setState({\n              hourly: response.data.hourly,\n              daily: response.data.daily,\n              current: response.data.current,\n            });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  handleForecastCardClick(i) {\n    this.setState({\n      selectedIndex: i,\n    });\n  }\n\n  render() {\n    const { current, daily, hourly, selectedIndex } = this.state;\n\n    const selectedDayForecast =\n      daily !== null ? (\n        <SelectedDayForecast\n          day={daily[selectedIndex]}\n          hourly={\n            selectedIndex < 2\n              ? hourly.slice(24 * selectedIndex, 24 * (1 + selectedIndex))\n              : null\n          }\n        />\n      ) : null;\n\n    return (\n      <div className=\"App\">\n        <h1>Oakville, ON</h1>\n        <CurrentWeather current={current} />\n        <SevenDayForecast\n          daily={daily}\n          selectedIndex={selectedIndex}\n          onClick={(i) => this.handleForecastCardClick(i)}\n        />\n        {selectedDayForecast}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}